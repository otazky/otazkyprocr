<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />    

      <title>Strategické otázky pro ČR - Mapa</title>

      <%= stylesheet_link_tag "bootstrap"%>
      <%= stylesheet_link_tag "map"%>      
      <%= javascript_include_tag "map/protovis-r3.2"%>
      <%= javascript_include_tag "map/jquery-1.7.2.min"%>
      <%= javascript_include_tag "map/jquery-ui-1.8rc3.custom.min"%>
      <%= javascript_include_tag "map/centroid"%>
      <%= javascript_include_tag "map/okresyCoord"%>
      <%= javascript_include_tag "map/map"%>      

      <script>
        var us_stats = {
          <%= populate_map(@map_data, @question) %>
        };

        us_stats.maxYear = 2008;
        us_stats.minYear = 1995;
        us_stats.yearIdx = function(year) { return 2008-year; }
      </script>

      <script type="text/javascript">var isDefault = true;</script>      
  </head>

  <body >
    <div class="container">

      <div class="row">
        <div class="span12">
          <header id="header">
          <div class="warning">
              Upozornění: V aktuální verzi mapa pracuje správně pouze v prohlížeči Mozilla Firefox. 
           </div>
            <h1>Strategické otázky pro ČR - Mapa</h1>
          </header>
        </div>
      </div>

      <div class="row">
        <div class="span12">          
          <nav id="top-menu">
            <ul class="nav nav-tabs">
              <li class="<%= 'active' if @citizens %>"><%= link_to 'Voliči', '/map/citizens/' %></li>
              <li class="<%= 'active' if @promised %>"><%= link_to 'Přislíbené hodiny', '/map/promised_hours' %></li>
              <li class="<%= 'active' if @worked %>"><%= link_to 'Odpracované hodiny', '/map/worked_hours' %></li>
            </ul>
          </nav>
        </div>
      </div>

      <div class="row">
        <div class="span12">
          <nav id="side-menu">
            <ul class="nav nav-tabs nav-stacked">
              <li class="headline"><%= link_to 'Strategické otázky', '#' %></li>     
              <%= yield %>
            </ul>
          </nav>
        </div>
      </div>

      <!--
      <div class="row">
        <div class="span12">
          <div id="breadcrumbs">
            <ul class="breadcrumb">
              <li><a href="#">Voliči</a> <span class="divider">/</span></li>              
              <li class="active">Jak obnovit ekonomický růst (základní strategický problém české společnosti)?</li>
            </ul>
          </div>
        </div>
      </div>
      -->

      <div class="row">
        <div class="span12">
          <div id="infoHead"></div>

          <div id="map">        
          <!--generating pies, single-question markers-->
          <script>
            var qTitle = new Array();
            var qData = new Array();
              
            <% if params[:id] %>
              <% number_of_q = 1 %>
            <% else %>
              <% number_of_q = @questions.count %>
            <% end %>
            
            var questions = [
              {number_of_q: <%= number_of_q %>},
                  {q_id: 0, q_color: "rgba(42, 11, 239,0.7)", q_name: "<%= @questions[0].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[0].nil? %>"},
                  {q_id: 1, q_color: "rgba(239, 11, 197,0.7)", q_name: "<%= @questions[1].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[1].nil? %>"},
                  {q_id: 2, q_color: "rgba(36, 229, 6,0.7)", q_name: "<%= @questions[2].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[2].nil? %>"},
                  {q_id: 3, q_color: "rgba(229, 170, 6,0.7)", q_name: "<%= @questions[3].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[3].nil? %>"},
                  {q_id: 4, q_color: "rgba(229, 32, 6,0.7)", q_name: "<%= @questions[4].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[4].nil? %>"},
                  {q_id: 4, q_color: "rgba(229, 32, 6,0.7)", q_name: "<%= @questions[5].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[5].nil? %>"},
                  {q_id: 4, q_color: "rgba(229, 32, 6,0.7)", q_name: "<%= @questions[6].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[6].nil? %>"},
                  {q_id: 4, q_color: "rgba(229, 32, 6,0.7)", q_name: "<%= @questions[7].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[7].nil? %>"},
                  {q_id: 4, q_color: "rgba(229, 32, 6,0.7)", q_name: "<%= @questions[8].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[8].nil? %>"},
                  {q_id: 4, q_color: "rgba(229, 32, 6,0.7)", q_name: "<%= @questions[9].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[9].nil? %>"},
                  {q_id: 4, q_color: "rgba(229, 32, 6,0.7)", q_name: "<%= @questions[10].title.gsub(/\r/, ' ').gsub(/\n/, ' ') unless @questions[10].nil? %>"}
                ]
              

              var a = questions[0].number_of_q; //NUM OG QUESTIONS
                  
                var w = 900,
                    h = 500,
                    yearsMargin = 100,
                    rScale = 1 / 5;

                var scale = pv.Geo.scale()
                    .domain({lng: 12, lat: 48.5}, {lng: 19, lat: 51})
                    .range({x: 0, y: 0}, {x: w, y: h});

                var colors = Array();
                if(isDefault == true)
                {
                  for(var i=0;i< a;i++)
                    colors[i] = questions[i+1].q_color;
                }
                else
                {
                  colors[0] = questions[1].q_color
                }

                okresyShapes.forEach(function(c) {
                  c.code = c.code.toUpperCase();
                  c.centLatLon = centroid(c.borders[0]);
                });

                // Add the main panel for the visualization
                var vis = new pv.Panel()
                    .width(w)
                    .height(h)
                    .top(30);
              
                // Add a panel for each state
                var state = vis.add(pv.Panel)
                  .data(okresyShapes);

              // Add a panel for each state land mass
                state.add(pv.Panel)
                    .data(function(c) c.borders)
                  .add(pv.Line)
                    .data(function(l) l)
                    .left(scale.x)
                    .top(scale.y)
                    .fillStyle("#eee")
                    .lineWidth(1)
                    .strokeStyle("#ccc")
                    .antialias(false);

                // Add the pie chart
                var pie = vis.add(pv.Panel)
                      .data(okresyShapes)
                      .left(function(c) scale(c.centLatLon).x)
                      .top(function(c) scale(c.centLatLon).y)
                   .add(pv.Label)
                .left(0)
                .top(function(d, c) Math.sqrt(us_stats[c.code].total)*rScale+10)
                .textAlign("center")
                .font("bold 10px sans-serif")
                .textStyle("#848484")
                .textShadow("5px 5px 5px rgba(0,0,0,0.5)")
                .text(function(d, c)
                              {
                                var label = [c.name];
                                  return label;
                            })

                  .add(pv.Wedge)
                      .data(
                          function(c){
                            if(isDefault == true)
                            {
                                  var sum = new Array();
                                  var q = "q";
                                  for(var j=0;j<a;j++)
                                  {
                                    var k = j + 1;
                                    if(j==(a-1))
                                    {
                                        for(var l=0;l<j;l++)
                                        {
                                            sum += qData[l][0];
                                            sum = parseFloat(sum);
                                        }
                                        qData[j] = (100 - sum);
                                    }
                                    else{
                                        qData[j] = us_stats[c.code]["q" + k];
                                    }
                                  }
                                  return qData;
                               }
                               else
                               {
                                qData[0] = us_stats[c.code]["q" + qid];
                                  return qData;
                               }
                          })
                      .left(0)
                      .top(0)
                        .outerRadius(function(d, c) Math.sqrt(us_stats[c.code].total)*rScale)
                      .angle(function(d) d /100 * 2 * Math.PI)
                        .fillStyle(function() colors[this.index])
                      .title(function(d, c)
                              {
                                if(isDefault == true)
                              {
                                    var sum = new Array();
                                    var q = "q";
                                    for(var j=0;j<a;j++)
                                    {
                                      var k = j + 1;
                                      if(j==(a-1))
                                      {
                                          for(var l=0;l<j;l++)
                                          {
                                              sum += qTitle[l][0];
                                              sum = parseFloat(sum);
                                            }
                                          qTitle[j] = (100 - sum);
                                          qTitle[j+1] = [c.name];
                                      }
                                      else{
                                          qTitle[j] = us_stats[c.code]["q" + k];
                                      }
                                    }
                                    return qTitle;
                                }
                                else
                                {
                                  qTitle[1] = [c.name];
                                  qTitle[0] = us_stats[c.code]["q" + qid];
                                    return qTitle;
                                }
                          });

                // Add the legend
                vis.add(pv.Dot)
                    .data(function()
                    {
                        var qLegend = new Array(a);
                        //var q = "q";
                        <% if @question %>
                          isDefault = false;
                        <% end %>

                        if(isDefault == true)
                       {
                         for(var i=0;i<a;i++)
                         {
                            // var k = i+1;
                             qLegend[i] = questions[i+1].q_name;
                         }
                         return qLegend;
                       }
                       else
                       {
                        qLegend[0]='<%= @question.title if @question %>';
                        return qLegend;
                       }
                    })
                    .left(10)
                    .bottom(function() this.index * 12 - 150)
                    .strokeStyle(null)
                    .fillStyle(function()
                         colors[this.index]) //need to be done!!
                    .anchor("right").add(pv.Label);
    
                  vis.render();
                  ge = null;

                  $("#map").find("span").css("height", 900);
                  $("#map").find("span").find("svg").attr("height", 900);

                  // START info window
                  $(function(){
                    var link = $('g>a');
                    link.live('mouseover', function(e) {
                      var x = e.pageX;
                      var y = e.pageY;

                      var titleValue = $(this).attr("title");
                      var titleValue = titleValue.split(',');
                      var count = titleValue.length;
                      var qNames = new Array();
                  
                      for(var i=0;i<a;i++)
                      {
                        //var k = i+1;
                        qNames[i] = questions[i+1].q_name;
                      }

                      var total_in_county = new Array();
                      <% if @citizens == true %>
                        <% @counties.each do |county| %>
                          total_in_county["<%= county.name %>"] = <%= county.citizens.count %>;
                        <% end %>
                      <% end %>

                      <% if @promised == true %>
                        <% @counties.each do |county| %>
                          total_in_county["<%= county.name %>"] = <%= county.count_promised_hours %>;
                        <% end %>
                      <% end %>

                      <% if @worked == true %>
                        <% @counties.each do |county| %>
                          total_in_county["<%= county.name %>"] = <%= county.count_worked_hours %>;
                        <% end %>
                      <% end %>
                      
                  
                      $('#infoHead').append('<h3>Okres: ' + titleValue[count-1] + '</h3>');
                      $('#infoHead').append('<h4>Celkem: ' + total_in_county[titleValue[count-1]] + '</h4>');
                                            

                      for(var i=0;i<count-1;i++)
                      {
                        <% if @question %>
                          qNames[i] = '<%= @question.title %>'                          
                        <% end %>
                        $('#infoHead').append('<p>' + qNames[i] + ': ' + titleValue[i] + ' %</p>');
                      }
                  
                      $('#infoHead').css('display',"inline");
                      //$('#infoHead').css('height',"150px");
                      $('#infoHead').css('position',"absolute");
                      $('#infoHead').css('left',x+10);
                      $('#infoHead').css('top',y+5);
                      return false;
                    })
                  })
                      
                  $(function(){
                    $('a').live('mouseout', function() {
                      $('#infoHead').css('display',"block");
                      $('#infoHead').css('position',"fixed");
                      //$('#infoHead').css('height',0);
                      $('#infoHead').css('left',-200);
                      $('#infoHead').css('top',-200);
                      $('#infoHead').empty();
                      return false;
                    })
                  })
                  // END info window

            </script>
            <!--generating pies, single-question markers-->
            </div>
        </div>
      </div>

    </div>                
  </body>
</html>
